[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float width : hint_range(0.0, 30.0);
uniform vec4 outlineColor : hint_color;

void fragment() {
	float size = width * (1.0 / float(textureSize(TEXTURE, 0).x));
	vec4 sprite_color = texture(TEXTURE, UV);
	float alpha = -8.0 * sprite_color.a;
	
	alpha += texture(TEXTURE, UV + vec2(0.0, -size)).a;
	alpha += texture(TEXTURE, UV + vec2(size, -size)).a;
	alpha += texture(TEXTURE, UV + vec2(size, 0.0)).a;
	alpha += texture(TEXTURE, UV + vec2(size, size)).a;
	alpha += texture(TEXTURE, UV + vec2(0.0, size)).a;
	alpha += texture(TEXTURE, UV + vec2(-size, size)).a;
	alpha += texture(TEXTURE, UV + vec2(-size, 0.0)).a;
	alpha += texture(TEXTURE, UV + vec2(-size, -size)).a;
	
	vec4 final_color = mix(sprite_color, outlineColor, alpha);
	COLOR = vec4(final_color.rgb, clamp(abs(alpha) + sprite_color.a, 0.0, 1.0));
}"

[resource]
shader = SubResource( 1 )
shader_param/width = 10.702
shader_param/outlineColor = Color( 0.596078, 0.309804, 0.309804, 1 )

